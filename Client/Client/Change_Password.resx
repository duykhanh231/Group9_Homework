<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>